generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_ORGANIZATIONS")
}

enum Role {
  OWNER
  ADMIN
  MEMBER
  BILLING
}

model Organization {
  id        String    @id @default(uuid())
  ownerId   String    @map("owner_id")
  name      String
  slug      String
  domain    String?
  logoUrl   String?   @map("logo_url")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  members Member[]
  invites Invite[]

  @@unique([name, slug, domain])
  @@index([name, slug, domain])
  @@map("organizations")
}

model Member {
  id        String   @id @default(uuid())
  userId    String   @map("user_id")
  role      Role     @default(MEMBER)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId String       @map("organization_id")

  @@unique([userId, organizationId])
  @@map("members")
}

model Invite {
  id        String   @id @default(uuid())
  authorId  String   @map("author_id")
  email     String
  role      Role
  expires   DateTime
  createdAt DateTime @default(now()) @map("created_at")

  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId String       @map("organization_id")

  @@unique([email, organizationId])
  @@index([email])
  @@map("invites")
}
